(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{172:function(t,a,e){"use strict";e.r(a);var s=e(0),v=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"vue-深入学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-深入学习","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue 深入学习")]),t._v(" "),e("h2",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6"}},[t._v("Vue 运行机制")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E7%BC%96%E8%AF%91"}},[t._v("编译")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%93%8D%E5%BA%94%E5%BC%8F"}},[t._v("响应式")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E8%99%9A%E6%8B%9FDOM"}},[t._v("虚拟DOM")])])]),t._v(" "),e("h2",{attrs:{id:"运行机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行机制")]),t._v(" "),e("h3",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),e("p",[t._v("我们知道通过"),e("code",[t._v("new Vue()")]),t._v("得到一个"),e("code",[t._v("vue")]),t._v("实例，既然要了解"),e("code",[t._v("vue")]),t._v("的运行机制，我们就来看看"),e("code",[t._v("new Vue()")]),t._v("到底做了些什么。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("Vue")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),e("span",{attrs:{class:"token operator"}},[t._v("!")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token function"}},[t._v("warn")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v("'Vue is a constructor and should be called with the `new` keyword'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("_init")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这里调用了"),e("code",[t._v("_init")]),t._v("函数进行初始化，它会初始化生命周期、事件、 "),e("code",[t._v("props")]),t._v("、 "),e("code",[t._v("methods")]),t._v("、 "),e("code",[t._v("data")]),t._v("、 "),e("code",[t._v("computed")]),t._v(" 与 "),e("code",[t._v("watch")]),t._v(" 等。\n其中最重要的是通过"),e("code",[t._v("Object.defineProperty")]),t._v("设置"),e("code",[t._v("setter")]),t._v("与"),e("code",[t._v("getter")]),t._v("函数，用来实现"),e("strong",[t._v("响应式")]),t._v("以及"),e("strong",[t._v("依赖收集")]),t._v("。")]),t._v(" "),e("p",[t._v("初始化之后会调用"),e("code",[t._v("$mount")]),t._v("，如果这是没有"),e("code",[t._v("render")]),t._v("函数，但是存在"),e("code",[t._v("template")]),t._v("，就会进行"),e("strong",[t._v("编译")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译")]),t._v(" "),e("p",[t._v("编译可以分成"),e("code",[t._v("parse")]),t._v("、"),e("code",[t._v("optimize")]),t._v("与"),e("code",[t._v("generate")]),t._v("三个阶段，编译结束后得到"),e("code",[t._v("render")]),t._v("函数。")]),t._v(" "),e("h3",{attrs:{id:"parse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse","aria-hidden":"true"}},[t._v("#")]),t._v(" parse")]),t._v(" "),e("p",[e("code",[t._v("parse")]),t._v("会用正则等方式解析"),e("code",[t._v("template")]),t._v("模板中的指令、"),e("code",[t._v("class")]),t._v("、"),e("code",[t._v("style")]),t._v("等数据，形成"),e("code",[t._v("AST")])]),t._v(" "),e("h3",{attrs:{id:"optimize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optimize","aria-hidden":"true"}},[t._v("#")]),t._v(" optimize")]),t._v(" "),e("p",[e("code",[t._v("optimize")]),t._v("的主要作用是标记"),e("code",[t._v("static")]),t._v("静态节点，这是"),e("code",[t._v("Vue")]),t._v("在编译过程中的一处优化，后面当"),e("code",[t._v("update")]),t._v("更新界面时，会有一个"),e("code",[t._v("patch")]),t._v("的过程，\n"),e("code",[t._v("diff")]),t._v("算法会直接跳过静态节点，从而减少了比较的过程，优化了"),e("code",[t._v("patch")]),t._v("的性能。")]),t._v(" "),e("h3",{attrs:{id:"generate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generate","aria-hidden":"true"}},[t._v("#")]),t._v(" generate")]),t._v(" "),e("p",[e("code",[t._v("generate")]),t._v("是将"),e("code",[t._v("AST")]),t._v("转化成"),e("code",[t._v("render")]),t._v("函数字符串的过程，得到结果是"),e("code",[t._v("render")]),t._v("的字符串以及"),e("code",[t._v("staticRenderFns")]),t._v("字符串。")]),t._v(" "),e("p",[t._v("在经历过这三个阶段以后，组件中就会存在渲染"),e("code",[t._v("VNode")]),t._v("所需的"),e("code",[t._v("render")]),t._v("函数了。")]),t._v(" "),e("h2",{attrs:{id:"响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应式")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v("是一个"),e("code",[t._v("MVVM")]),t._v("框架，"),e("code",[t._v("Vue")]),t._v("的响应式是基于"),e("code",[t._v("Object.defineProperty")]),t._v("的。")]),t._v(" "),e("h2",{attrs:{id:"虚拟dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom","aria-hidden":"true"}},[t._v("#")]),t._v(" 虚拟DOM")])])}],!1,null,null,null);v.options.__file="README.md";a.default=v.exports}}]);